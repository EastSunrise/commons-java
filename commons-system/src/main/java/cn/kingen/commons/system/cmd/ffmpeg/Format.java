package cn.kingen.commons.system.cmd.ffmpeg;

import cn.kingen.commons.convert.JsonDurationFormat;
import com.fasterxml.jackson.annotation.JsonAlias;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Getter;
import lombok.ToString;

import java.time.Duration;
import java.time.LocalDateTime;

/**
 * The information about the container format of the input multimedia stream.
 *
 * @author Kingen
 */
@Getter
@ToString
public class Format {

    @JsonProperty(value = "filename")
    private String filename;

    @JsonProperty(value = "format_name")
    private String formatName;

    @JsonProperty(value = "format_long_name")
    private String formatLongName;

    @JsonProperty(value = "size")
    private Long size;

    @JsonProperty(value = "bit_rate")
    private Long bitRate;

    @JsonProperty(value = "duration")
    @JsonDurationFormat(format = JsonDurationFormat.Format.NUMBER_AS_SECONDS)
    private Duration duration;

    @JsonProperty(value = "start_time")
    private Double startTime;

    @JsonProperty(value = "probe_score")
    private Integer probeScore;

    @JsonProperty(value = "nb_programs")
    private Integer nbPrograms;

    @JsonProperty(value = "nb_streams")
    private Integer nbStreams;

    @JsonProperty("tags")
    private FormatTags tags;

    Format() {
    }

    @Getter
    @ToString
    public static class FormatTags {

        @JsonProperty("title")
        private String title;

        @JsonProperty("encoder")
        @JsonAlias("ENCODER")
        private String encoder;

        @JsonProperty("creation_time")
        @JsonFormat(pattern = "yyyy-MM-dd'T'HH:mm:ss.SSSSSS'Z'", timezone = "utc")
        private LocalDateTime creationTime;

        @JsonProperty("Creation Date")
        @JsonFormat(pattern = "M/d/yyyy H:mm:ss")
        private LocalDateTime creationDate;

        @JsonProperty("author")
        private String author;

        @JsonProperty("Generated By")
        private String generatedBy;

        @JsonProperty("Encoded/Released by")
        private String releasedBy;

        @JsonProperty("major_brand")
        private String majorBrand;

        @JsonProperty("minor_version")
        private Integer minorVersion;

        @JsonProperty("compatible_brands")
        private String compatibleBrands;

        @JsonProperty("copyright")
        private String copyright;

        @JsonProperty("comment")
        private String comment;

        @JsonProperty("ASMRuleBook")
        private String asmRuleBook;

        @JsonProperty("Audiences")
        private String audiences;

        @JsonProperty("audioMode")
        private String audioMode;

        @JsonProperty("Description")
        @JsonAlias("description")
        private String description;

        @JsonProperty("Email")
        private String email;

        @JsonProperty("HomeWeb")
        private String website;

        @JsonProperty("Keywords")
        private String keywords;

        @JsonProperty("Modification Date")
        @JsonFormat(pattern = "M/d/yyyy H:mm:ss")
        private LocalDateTime modificationDate;

        @JsonProperty("videoMode")
        private String videoMode;

        @JsonProperty("software")
        private String software;

        @JsonProperty("File ID")
        private String fileId;

        FormatTags() {
        }
    }
}